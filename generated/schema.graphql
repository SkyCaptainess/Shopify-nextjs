### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Address {
  active: Boolean
  address1: String
  address2: String
  city: String
  country: String
  firstName: String
  id: String
  lastName: String
  province: String
  zip: String
}

type Cart {
  cartItems: [CartItem]
  id: String
}

type CartItem {
  categoryHandle: String
  description: String
  handle: String
  id: String
  image: String
  note: String
  price: Float
  quantity: Int
  quantityAvailable: Int
  title: String
}

type Category {
  description: String
  handle: String
  id: String
  image: String
  products: [Product]
  title: String
}

type FieldResponse {
  data: String
  message: String
  success: Boolean
}

type Mutation {
  addToCart(note: String, quantity: Int!, variantId: String!): FieldResponse
  populateCheckout(shippingAddress: ShippingAddressInput): FieldResponse
  removeFromCart(itemId: String!): FieldResponse
  signinEmail(email: String!, password: String!): FieldResponse
  signout: FieldResponse
  signupCustomer(email: String!, firstName: String, password: String!): FieldResponse
  updateCartQuantity(itemId: String!, quantity: Int!): FieldResponse
}

type Order {
  amount: Float
  fulfillment: String
  id: String
  orderItems: [OrderItem]
  processedAt: String
}

type OrderItem {
  categoryHandle: String
  image: String
  productHandle: String
  quantity: Int
  title: String
  total: Float
}

type Product {
  additionalImages: [ProductImage]
  category: Category
  categoryHandle: String
  description: String
  handle: String
  id: String
  image: ProductImage
  price: Float
  title: String
}

type ProductAvailability {
  availableForSale: Boolean
  id: String
  totalInventory: Int
}

type ProductImage {
  alt: String
  url: String
}

type Query {
  addresses: [Address]!
  cart: Cart
  checkoutUrl: String
  frontCategories: [Category]!
  getUserOrders: [Order]
  me: User
  order(orderId: String!): Order
  productAvailability(handle: String!): ProductAvailability
  products: [Product]!
}

input ShippingAddressInput {
  address1: String!
  address2: String
  city: String
  country: String
  firstName: String
  lastName: String
  province: String
  zip: String
}

type User {
  displayName: String
  email: String
  firstName: String
  id: String
  lastName: String
}
