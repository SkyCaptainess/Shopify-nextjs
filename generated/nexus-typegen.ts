/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import { Context } from "./../graphql-shopify/context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ShippingAddressInput: { // input type
    address1: string; // String!
    address2?: string | null; // String
    city?: string | null; // String
    country?: string | null; // String
    firstName?: string | null; // String
    lastName?: string | null; // String
    province?: string | null; // String
    zip?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Address: { // root type
    active?: boolean | null; // Boolean
    address1?: string | null; // String
    address2?: string | null; // String
    city?: string | null; // String
    country?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // String
    lastName?: string | null; // String
    province?: string | null; // String
    zip?: string | null; // String
  }
  Cart: { // root type
    cartItems?: Array<NexusGenRootTypes['CartItem'] | null> | null; // [CartItem]
    id?: string | null; // String
  }
  CartItem: { // root type
    categoryHandle?: string | null; // String
    description?: string | null; // String
    handle?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    note?: string | null; // String
    price?: number | null; // Float
    quantity?: number | null; // Int
    quantityAvailable?: number | null; // Int
    title?: string | null; // String
  }
  Category: { // root type
    description?: string | null; // String
    handle?: string | null; // String
    id?: string | null; // String
    image?: string | null; // String
    products?: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    title?: string | null; // String
  }
  FieldResponse: { // root type
    data?: string | null; // String
    message?: string | null; // String
    success?: boolean | null; // Boolean
  }
  Mutation: {};
  Order: { // root type
    amount?: number | null; // Float
    fulfillment?: string | null; // String
    id?: string | null; // String
    orderItems?: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    processedAt?: string | null; // String
  }
  OrderItem: { // root type
    categoryHandle?: string | null; // String
    image?: string | null; // String
    productHandle?: string | null; // String
    quantity?: number | null; // Int
    title?: string | null; // String
    total?: number | null; // Float
  }
  Product: { // root type
    additionalImages?: Array<NexusGenRootTypes['ProductImage'] | null> | null; // [ProductImage]
    category?: NexusGenRootTypes['Category'] | null; // Category
    categoryHandle?: string | null; // String
    description?: string | null; // String
    handle?: string | null; // String
    id?: string | null; // String
    image?: NexusGenRootTypes['ProductImage'] | null; // ProductImage
    price?: number | null; // Float
    title?: string | null; // String
  }
  ProductAvailability: { // root type
    availableForSale?: boolean | null; // Boolean
    id?: string | null; // String
    totalInventory?: number | null; // Int
  }
  ProductImage: { // root type
    alt?: string | null; // String
    url?: string | null; // String
  }
  Query: {};
  User: { // root type
    displayName?: string | null; // String
    email?: string | null; // String
    firstName?: string | null; // String
    id?: string | null; // String
    lastName?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Address: { // field return type
    active: boolean | null; // Boolean
    address1: string | null; // String
    address2: string | null; // String
    city: string | null; // String
    country: string | null; // String
    firstName: string | null; // String
    id: string | null; // String
    lastName: string | null; // String
    province: string | null; // String
    zip: string | null; // String
  }
  Cart: { // field return type
    cartItems: Array<NexusGenRootTypes['CartItem'] | null> | null; // [CartItem]
    id: string | null; // String
  }
  CartItem: { // field return type
    categoryHandle: string | null; // String
    description: string | null; // String
    handle: string | null; // String
    id: string | null; // String
    image: string | null; // String
    note: string | null; // String
    price: number | null; // Float
    quantity: number | null; // Int
    quantityAvailable: number | null; // Int
    title: string | null; // String
  }
  Category: { // field return type
    description: string | null; // String
    handle: string | null; // String
    id: string | null; // String
    image: string | null; // String
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    title: string | null; // String
  }
  FieldResponse: { // field return type
    data: string | null; // String
    message: string | null; // String
    success: boolean | null; // Boolean
  }
  Mutation: { // field return type
    addToCart: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    populateCheckout: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    removeFromCart: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    signinEmail: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    signout: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    signupCustomer: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
    updateCartQuantity: NexusGenRootTypes['FieldResponse'] | null; // FieldResponse
  }
  Order: { // field return type
    amount: number | null; // Float
    fulfillment: string | null; // String
    id: string | null; // String
    orderItems: Array<NexusGenRootTypes['OrderItem'] | null> | null; // [OrderItem]
    processedAt: string | null; // String
  }
  OrderItem: { // field return type
    categoryHandle: string | null; // String
    image: string | null; // String
    productHandle: string | null; // String
    quantity: number | null; // Int
    title: string | null; // String
    total: number | null; // Float
  }
  Product: { // field return type
    additionalImages: Array<NexusGenRootTypes['ProductImage'] | null> | null; // [ProductImage]
    category: NexusGenRootTypes['Category'] | null; // Category
    categoryHandle: string | null; // String
    description: string | null; // String
    handle: string | null; // String
    id: string | null; // String
    image: NexusGenRootTypes['ProductImage'] | null; // ProductImage
    price: number | null; // Float
    title: string | null; // String
  }
  ProductAvailability: { // field return type
    availableForSale: boolean | null; // Boolean
    id: string | null; // String
    totalInventory: number | null; // Int
  }
  ProductImage: { // field return type
    alt: string | null; // String
    url: string | null; // String
  }
  Query: { // field return type
    addresses: Array<NexusGenRootTypes['Address'] | null>; // [Address]!
    cart: NexusGenRootTypes['Cart'] | null; // Cart
    checkoutUrl: string | null; // String
    frontCategories: Array<NexusGenRootTypes['Category'] | null>; // [Category]!
    getUserOrders: Array<NexusGenRootTypes['Order'] | null> | null; // [Order]
    me: NexusGenRootTypes['User'] | null; // User
    order: NexusGenRootTypes['Order'] | null; // Order
    productAvailability: NexusGenRootTypes['ProductAvailability'] | null; // ProductAvailability
    products: Array<NexusGenRootTypes['Product'] | null>; // [Product]!
  }
  User: { // field return type
    displayName: string | null; // String
    email: string | null; // String
    firstName: string | null; // String
    id: string | null; // String
    lastName: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Address: { // field return type name
    active: 'Boolean'
    address1: 'String'
    address2: 'String'
    city: 'String'
    country: 'String'
    firstName: 'String'
    id: 'String'
    lastName: 'String'
    province: 'String'
    zip: 'String'
  }
  Cart: { // field return type name
    cartItems: 'CartItem'
    id: 'String'
  }
  CartItem: { // field return type name
    categoryHandle: 'String'
    description: 'String'
    handle: 'String'
    id: 'String'
    image: 'String'
    note: 'String'
    price: 'Float'
    quantity: 'Int'
    quantityAvailable: 'Int'
    title: 'String'
  }
  Category: { // field return type name
    description: 'String'
    handle: 'String'
    id: 'String'
    image: 'String'
    products: 'Product'
    title: 'String'
  }
  FieldResponse: { // field return type name
    data: 'String'
    message: 'String'
    success: 'Boolean'
  }
  Mutation: { // field return type name
    addToCart: 'FieldResponse'
    populateCheckout: 'FieldResponse'
    removeFromCart: 'FieldResponse'
    signinEmail: 'FieldResponse'
    signout: 'FieldResponse'
    signupCustomer: 'FieldResponse'
    updateCartQuantity: 'FieldResponse'
  }
  Order: { // field return type name
    amount: 'Float'
    fulfillment: 'String'
    id: 'String'
    orderItems: 'OrderItem'
    processedAt: 'String'
  }
  OrderItem: { // field return type name
    categoryHandle: 'String'
    image: 'String'
    productHandle: 'String'
    quantity: 'Int'
    title: 'String'
    total: 'Float'
  }
  Product: { // field return type name
    additionalImages: 'ProductImage'
    category: 'Category'
    categoryHandle: 'String'
    description: 'String'
    handle: 'String'
    id: 'String'
    image: 'ProductImage'
    price: 'Float'
    title: 'String'
  }
  ProductAvailability: { // field return type name
    availableForSale: 'Boolean'
    id: 'String'
    totalInventory: 'Int'
  }
  ProductImage: { // field return type name
    alt: 'String'
    url: 'String'
  }
  Query: { // field return type name
    addresses: 'Address'
    cart: 'Cart'
    checkoutUrl: 'String'
    frontCategories: 'Category'
    getUserOrders: 'Order'
    me: 'User'
    order: 'Order'
    productAvailability: 'ProductAvailability'
    products: 'Product'
  }
  User: { // field return type name
    displayName: 'String'
    email: 'String'
    firstName: 'String'
    id: 'String'
    lastName: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    addToCart: { // args
      note?: string | null; // String
      quantity: number; // Int!
      variantId: string; // String!
    }
    populateCheckout: { // args
      shippingAddress?: NexusGenInputs['ShippingAddressInput'] | null; // ShippingAddressInput
    }
    removeFromCart: { // args
      itemId: string; // String!
    }
    signinEmail: { // args
      email: string; // String!
      password: string; // String!
    }
    signupCustomer: { // args
      email: string; // String!
      firstName?: string | null; // String
      password: string; // String!
    }
    updateCartQuantity: { // args
      itemId: string; // String!
      quantity: number; // Int!
    }
  }
  Query: {
    order: { // args
      orderId: string; // String!
    }
    productAvailability: { // args
      handle: string; // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}